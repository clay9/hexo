#+TITLE: php
#+LAYOUT: post
#+CATEGORIES: language
#+TAGS: 
#+OPTIONS: ^:nil

php && php框架
#+HTML: <!-- more -->
* 说明
  php是web后端常用的开发语言
  有cli和fpm版本, cli版本暂时不知道什么用, 
  fpm版本可以供其他软件使用, 比如apache2, nginx

* 安装
  强烈推荐使用docker安装php
  #+BEGIN_EXAMPLE
  docker install php:7.4.7-fpm
  #+END_EXAMPLE

* laravel
  [[https://learnku.com/docs/laravel/7.x][中文翻译文档]]
  [[https://laravel.com][官方文档]]

  laravel是流行的php框架
  : 唯一感触就是环境配置真麻烦
  
  laravel与hexo非常类似, 都是通过命令生成一个项目.
  不同的是laravel需要把很多信息打入到php所在的载体中(docker容器或者服务器)(在compose install的时候打入).
  而hexo则是通过命令, 把源文件生成为静态文件, 静态文件可以被github-page等服务器识别, 供web解析

** laravel安装adminLTE -- 通过mix方式安装
   : laravel7.x 安装adminlte2.4
   
   1. 下载adminLTE到工程中
      #+BEGIN_EXAMPLE
      composer require "almasaeed2010/adminlte=~2.4"
      #+END_EXAMPLE
   2. 编写app.scss &&  app.js && webpack.mix.js  TODONOW 如何编写
      app.scss路径 resources/sass/app.scss
      app.js路径 resources/js/app.js
      webpack.mix.js路径 在项目根目录下
   3. npm install && npm run dev
      : 项目根目录下执行
      : npm install 安装js依赖  (根据package.json来安装)
      : npm run dev 把webpack.mix.js(类似工程项目)中内容编译
   4. xxx.blade.php代码中引用修改
      : css文件引用修改
      : js文件引用修改

      #+BEGIN_EXAMPLE
      <!DOCTYPE html>
      <html>
      <head>
      .
      .
      .
         <link rel="stylesheet" href="{{ mix('css/app.css') }}">
      </head>

      <body class="hold-transition skin-blue sidebar-mini">
      .
      .
      .
        <script src="{{ mix('js/app.js') }}"></script>
      </body>
      </html>
      #+END_EXAMPLE

** laravel安装adminLTE -- 直接放到public目录下面即可 TODONOW 待补充
   1. 把adminLTE代码(github下载的源码) 放到laravel项目的pulic目录中
   2. 修改项目中对adminLTE的引用路径
      #+BEGIN_EXAMPLE
        <!-- Font Awesome -->
	<link rel="stylesheet" href="adminlte/plugins/fontawesome-free/css/all.min.css">
	<!-- icheck bootstrap -->
	<link rel="stylesheet" href="adminlte/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
	<!-- Theme style -->
	<link rel="stylesheet" href="adminlte/dist/css/adminlte.min.css">
      #+END_EXAMPLE
      注意路径的起始位置为laravel项目的public
   3. 重启php 与 nginx!!!!!
      : 需要重启才能生效

* compose
  compose 解决项目中对php的依赖
  : mac系统下
** 安装
   #+BEGIN_EXAMPLE
   # 安装compose
   curl -sS https://getcomposer.org/installer | php
   # 修改为全局可用
   sudo mv composer.phar /usr/local/bin/composer
   # 查看是否安装成功
   composer --version
   #+END_EXAMPLE

** 更新源
   : 国外的源 被墙了
   #+BEGIN_EXAMPLE
   # 修改为国内的源
   composer config -g repo.packagist composer https://packagist.phpcomposer.com
   #+END_EXAMPLE


* pear && pecl
  : 实际中并未使用到 :)
  pecl是php扩展池, 
  pear管理php自身扩展库, 可以在pecl中下载php扩展

* 使用
  实际使用, 可以参考下面的
  web服务器 + php + lavarel + 数据库
  TODONOW 待补充连接
  
